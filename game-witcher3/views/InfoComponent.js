"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const React = __importStar(require("react"));
const BS = __importStar(require("react-bootstrap"));
const common_1 = require("../common");
const vortex_api_1 = require("vortex-api");
const react_i18next_1 = require("react-i18next");
function InfoComponent(props) {
    const { onToggleModsState } = props;
    const t = (0, react_i18next_1.useTranslation)(common_1.I18N_NAMESPACE).t;
    const toggleModsState = React.useCallback((enable) => {
        onToggleModsState(enable);
    }, [onToggleModsState]);
    return (React.createElement("div", { style: { display: 'flex', flexDirection: 'column', gap: '12px', marginRight: '16px' } },
        React.createElement("div", null,
            React.createElement("p", null,
                t('You can adjust the load order for The Witcher 3 by dragging and dropping '
                    + 'mods up or down on this page.  If you are using several mods that add scripts you may need to use '
                    + 'the Witcher 3 Script merger. For more information see: ', { ns: common_1.I18N_NAMESPACE }),
                React.createElement("a", { onClick: () => vortex_api_1.util.opn('https://wiki.nexusmods.com/index.php/Modding_The_Witcher_3_with_Vortex') }, t('Modding The Witcher 3 with Vortex.', { ns: common_1.I18N_NAMESPACE })))),
        React.createElement("div", { style: { height: '80%' } },
            React.createElement("p", null, t('Please note:', { ns: common_1.I18N_NAMESPACE })),
            React.createElement("ul", null,
                React.createElement("li", null, t('For Witcher 3, the mod with the lowest index number (by default, the mod sorted at the top) overrides mods with a higher index number.', { ns: common_1.I18N_NAMESPACE })),
                React.createElement("li", null, t('If you cannot see your mod in this load order, you may need to add it manually (see our wiki for details).', { ns: common_1.I18N_NAMESPACE })),
                React.createElement("li", null, t('When managing menu mods, mod settings changed inside the game will be detected by Vortex as external changes - that is expected, '
                    + 'choose to use the newer file and your settings will be made persistent.', { ns: common_1.I18N_NAMESPACE })),
                React.createElement("li", null, t('Merges generated by the Witcher 3 Script merger must be loaded first and are locked in the first load order slot.', { ns: common_1.I18N_NAMESPACE }))),
            React.createElement(BS.Button, { onClick: () => toggleModsState(false), style: { marginBottom: '5px', width: 'min-content' } }, t('Disable All')),
            React.createElement("br", null),
            React.createElement(BS.Button, { onClick: () => toggleModsState(true), style: { marginBottom: '5px', width: 'min-content' } }, t('Enable All ')))));
}
exports.default = InfoComponent;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSW5mb0NvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkluZm9Db21wb25lbnQudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFDQSw2Q0FBK0I7QUFDL0Isb0RBQXNDO0FBQ3RDLHNDQUEyQztBQUUzQywyQ0FBOEM7QUFDOUMsaURBQStDO0FBTS9DLFNBQXdCLGFBQWEsQ0FBQyxLQUF5QjtJQUM3RCxNQUFNLEVBQUUsaUJBQWlCLEVBQUUsR0FBRyxLQUFLLENBQUM7SUFDcEMsTUFBTSxDQUFDLEdBQUcsSUFBQSw4QkFBYyxFQUFDLHVCQUFjLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDM0MsTUFBTSxlQUFlLEdBQUcsS0FBSyxDQUFDLFdBQVcsQ0FBQyxDQUFDLE1BQU0sRUFBRSxFQUFFO1FBQ25ELGlCQUFpQixDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQzVCLENBQUMsRUFBRSxDQUFDLGlCQUFpQixDQUFDLENBQUMsQ0FBQztJQUV4QixPQUFPLENBQ0wsNkJBQUssS0FBSyxFQUFFLEVBQUUsT0FBTyxFQUFFLE1BQU0sRUFBRSxhQUFhLEVBQUUsUUFBUSxFQUFFLEdBQUcsRUFBRSxNQUFNLEVBQUUsV0FBVyxFQUFFLE1BQU0sRUFBRTtRQUN0RjtZQUNFO2dCQUNHLENBQUMsQ0FBQywyRUFBMkU7c0JBQzFFLG9HQUFvRztzQkFDcEcseURBQXlELEVBQUUsRUFBRSxFQUFFLEVBQUUsdUJBQWMsRUFBRSxDQUFDO2dCQUN0RiwyQkFBRyxPQUFPLEVBQUUsR0FBRyxFQUFFLENBQUMsaUJBQUksQ0FBQyxHQUFHLENBQUMsd0VBQXdFLENBQUMsSUFDakcsQ0FBQyxDQUFDLG9DQUFvQyxFQUFFLEVBQUUsRUFBRSxFQUFFLHVCQUFjLEVBQUUsQ0FBQyxDQUM5RCxDQUNGLENBQ0E7UUFDTiw2QkFBSyxLQUFLLEVBQUUsRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFFO1lBQzNCLCtCQUFJLENBQUMsQ0FBQyxjQUFjLEVBQUUsRUFBRSxFQUFFLEVBQUUsdUJBQWMsRUFBRSxDQUFDLENBQUs7WUFDbEQ7Z0JBQ0UsZ0NBQUssQ0FBQyxDQUFDLHdJQUF3SSxFQUFFLEVBQUUsRUFBRSxFQUFFLHVCQUFjLEVBQUUsQ0FBQyxDQUFNO2dCQUM5SyxnQ0FBSyxDQUFDLENBQUMsNEdBQTRHLEVBQUUsRUFBRSxFQUFFLEVBQUUsdUJBQWMsRUFBRSxDQUFDLENBQU07Z0JBQ2xKLGdDQUFLLENBQUMsQ0FBQyxtSUFBbUk7c0JBQ3RJLHlFQUF5RSxFQUMzRSxFQUFFLEVBQUUsRUFBRSx1QkFBYyxFQUFFLENBQUMsQ0FBTTtnQkFDL0IsZ0NBQUssQ0FBQyxDQUFDLG1IQUFtSCxFQUFFLEVBQUUsRUFBRSxFQUFFLHVCQUFjLEVBQUUsQ0FBQyxDQUFNLENBQ3RKO1lBQ0wsb0JBQUMsRUFBRSxDQUFDLE1BQU0sSUFDUixPQUFPLEVBQUUsR0FBRyxFQUFFLENBQUMsZUFBZSxDQUFDLEtBQUssQ0FBQyxFQUNyQyxLQUFLLEVBQUUsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxhQUFhLEVBQUUsSUFFbkQsQ0FBQyxDQUFDLGFBQWEsQ0FBQyxDQUNQO1lBQ1osK0JBQU07WUFDTixvQkFBQyxFQUFFLENBQUMsTUFBTSxJQUNSLE9BQU8sRUFBRSxHQUFHLEVBQUUsQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLEVBQ3BDLEtBQUssRUFBRSxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLGFBQWEsRUFBRSxJQUVuRCxDQUFDLENBQUMsYUFBYSxDQUFDLENBQ1AsQ0FDUixDQUNGLENBQ1QsQ0FBQztBQUNKLENBQUM7QUE3Q0QsZ0NBNkNDIiwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgKi9cclxuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgKiBhcyBCUyBmcm9tICdyZWFjdC1ib290c3RyYXAnO1xyXG5pbXBvcnQgeyBJMThOX05BTUVTUEFDRSB9IGZyb20gJy4uL2NvbW1vbic7XHJcblxyXG5pbXBvcnQgeyBGbGV4TGF5b3V0LCB1dGlsIH0gZnJvbSAndm9ydGV4LWFwaSc7XHJcbmltcG9ydCB7IHVzZVRyYW5zbGF0aW9uIH0gZnJvbSAncmVhY3QtaTE4bmV4dCc7XHJcblxyXG5pbnRlcmZhY2UgSW5mb0NvbXBvbmVudFByb3BzIHtcclxuICBvblRvZ2dsZU1vZHNTdGF0ZTogKGVuYWJsZTogYm9vbGVhbikgPT4gdm9pZDtcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gSW5mb0NvbXBvbmVudChwcm9wczogSW5mb0NvbXBvbmVudFByb3BzKSB7XHJcbiAgY29uc3QgeyBvblRvZ2dsZU1vZHNTdGF0ZSB9ID0gcHJvcHM7XHJcbiAgY29uc3QgdCA9IHVzZVRyYW5zbGF0aW9uKEkxOE5fTkFNRVNQQUNFKS50O1xyXG4gIGNvbnN0IHRvZ2dsZU1vZHNTdGF0ZSA9IFJlYWN0LnVzZUNhbGxiYWNrKChlbmFibGUpID0+IHtcclxuICAgIG9uVG9nZ2xlTW9kc1N0YXRlKGVuYWJsZSk7XHJcbiAgfSwgW29uVG9nZ2xlTW9kc1N0YXRlXSk7XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8ZGl2IHN0eWxlPXt7IGRpc3BsYXk6ICdmbGV4JywgZmxleERpcmVjdGlvbjogJ2NvbHVtbicsIGdhcDogJzEycHgnLCBtYXJnaW5SaWdodDogJzE2cHgnIH19PlxyXG4gICAgICAgIDxkaXY+XHJcbiAgICAgICAgICA8cD5cclxuICAgICAgICAgICAge3QoJ1lvdSBjYW4gYWRqdXN0IHRoZSBsb2FkIG9yZGVyIGZvciBUaGUgV2l0Y2hlciAzIGJ5IGRyYWdnaW5nIGFuZCBkcm9wcGluZyAnXHJcbiAgICAgICAgICAgICAgKyAnbW9kcyB1cCBvciBkb3duIG9uIHRoaXMgcGFnZS4gIElmIHlvdSBhcmUgdXNpbmcgc2V2ZXJhbCBtb2RzIHRoYXQgYWRkIHNjcmlwdHMgeW91IG1heSBuZWVkIHRvIHVzZSAnXHJcbiAgICAgICAgICAgICAgKyAndGhlIFdpdGNoZXIgMyBTY3JpcHQgbWVyZ2VyLiBGb3IgbW9yZSBpbmZvcm1hdGlvbiBzZWU6ICcsIHsgbnM6IEkxOE5fTkFNRVNQQUNFIH0pfVxyXG4gICAgICAgICAgICA8YSBvbkNsaWNrPXsoKSA9PiB1dGlsLm9wbignaHR0cHM6Ly93aWtpLm5leHVzbW9kcy5jb20vaW5kZXgucGhwL01vZGRpbmdfVGhlX1dpdGNoZXJfM193aXRoX1ZvcnRleCcpfT5cclxuICAgICAgICAgICAgICB7dCgnTW9kZGluZyBUaGUgV2l0Y2hlciAzIHdpdGggVm9ydGV4LicsIHsgbnM6IEkxOE5fTkFNRVNQQUNFIH0pfVxyXG4gICAgICAgICAgICA8L2E+XHJcbiAgICAgICAgICA8L3A+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPGRpdiBzdHlsZT17eyBoZWlnaHQ6ICc4MCUnIH19PlxyXG4gICAgICAgICAgPHA+e3QoJ1BsZWFzZSBub3RlOicsIHsgbnM6IEkxOE5fTkFNRVNQQUNFIH0pfTwvcD5cclxuICAgICAgICAgIDx1bD5cclxuICAgICAgICAgICAgPGxpPnt0KCdGb3IgV2l0Y2hlciAzLCB0aGUgbW9kIHdpdGggdGhlIGxvd2VzdCBpbmRleCBudW1iZXIgKGJ5IGRlZmF1bHQsIHRoZSBtb2Qgc29ydGVkIGF0IHRoZSB0b3ApIG92ZXJyaWRlcyBtb2RzIHdpdGggYSBoaWdoZXIgaW5kZXggbnVtYmVyLicsIHsgbnM6IEkxOE5fTkFNRVNQQUNFIH0pfTwvbGk+XHJcbiAgICAgICAgICAgIDxsaT57dCgnSWYgeW91IGNhbm5vdCBzZWUgeW91ciBtb2QgaW4gdGhpcyBsb2FkIG9yZGVyLCB5b3UgbWF5IG5lZWQgdG8gYWRkIGl0IG1hbnVhbGx5IChzZWUgb3VyIHdpa2kgZm9yIGRldGFpbHMpLicsIHsgbnM6IEkxOE5fTkFNRVNQQUNFIH0pfTwvbGk+XHJcbiAgICAgICAgICAgIDxsaT57dCgnV2hlbiBtYW5hZ2luZyBtZW51IG1vZHMsIG1vZCBzZXR0aW5ncyBjaGFuZ2VkIGluc2lkZSB0aGUgZ2FtZSB3aWxsIGJlIGRldGVjdGVkIGJ5IFZvcnRleCBhcyBleHRlcm5hbCBjaGFuZ2VzIC0gdGhhdCBpcyBleHBlY3RlZCwgJ1xyXG4gICAgICAgICAgICAgICsgJ2Nob29zZSB0byB1c2UgdGhlIG5ld2VyIGZpbGUgYW5kIHlvdXIgc2V0dGluZ3Mgd2lsbCBiZSBtYWRlIHBlcnNpc3RlbnQuJyxcclxuICAgICAgICAgICAgICB7IG5zOiBJMThOX05BTUVTUEFDRSB9KX08L2xpPlxyXG4gICAgICAgICAgICA8bGk+e3QoJ01lcmdlcyBnZW5lcmF0ZWQgYnkgdGhlIFdpdGNoZXIgMyBTY3JpcHQgbWVyZ2VyIG11c3QgYmUgbG9hZGVkIGZpcnN0IGFuZCBhcmUgbG9ja2VkIGluIHRoZSBmaXJzdCBsb2FkIG9yZGVyIHNsb3QuJywgeyBuczogSTE4Tl9OQU1FU1BBQ0UgfSl9PC9saT5cclxuICAgICAgICAgIDwvdWw+XHJcbiAgICAgICAgICA8QlMuQnV0dG9uXHJcbiAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHRvZ2dsZU1vZHNTdGF0ZShmYWxzZSl9XHJcbiAgICAgICAgICAgIHN0eWxlPXt7IG1hcmdpbkJvdHRvbTogJzVweCcsIHdpZHRoOiAnbWluLWNvbnRlbnQnIH19XHJcbiAgICAgICAgICA+XHJcbiAgICAgICAgICAgIHt0KCdEaXNhYmxlIEFsbCcpfVxyXG4gICAgICAgICAgPC9CUy5CdXR0b24+XHJcbiAgICAgICAgICA8YnIgLz5cclxuICAgICAgICAgIDxCUy5CdXR0b25cclxuICAgICAgICAgICAgb25DbGljaz17KCkgPT4gdG9nZ2xlTW9kc1N0YXRlKHRydWUpfVxyXG4gICAgICAgICAgICBzdHlsZT17eyBtYXJnaW5Cb3R0b206ICc1cHgnLCB3aWR0aDogJ21pbi1jb250ZW50JyB9fVxyXG4gICAgICAgICAgPlxyXG4gICAgICAgICAgICB7dCgnRW5hYmxlIEFsbCAnKX1cclxuICAgICAgICAgIDwvQlMuQnV0dG9uPlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICA8L2Rpdj5cclxuICApO1xyXG59XHJcbiJdfQ==